[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "habit-tracker"
version = "0.1.0"
description = "API para rastreamento de hábitos"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Gabriel", email = "gabriel@example.com"}
]
keywords = ["fastapi", "habits", "tracking", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    "fastapi==0.115.12",
    "uvicorn[standard]==0.29.0",
    "sqlalchemy==2.0.40",
    "pymysql==1.1.1",
    "cryptography==41.0.7",
    "alembic==1.13.1",
    "pydantic==2.11.2",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.3",
    "httpx==0.27.2",
    "pytest-cov==4.1.0",
    "black==23.12.1",
    "isort==5.13.2",
    "flake8==7.0.0",
]

[project.urls]
Homepage = "https://github.com/gabriel/habit-tracker"
Repository = "https://github.com/gabriel/habit-tracker"
Issues = "https://github.com/gabriel/habit-tracker/issues"

[project.scripts]
habit-tracker = "app.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.setuptools.package-data]
"*" = ["*.py", "*.txt", "*.yml", "*.yaml"]

# Configurações do pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Configurações do Black
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Configurações do isort
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "sqlalchemy", "pytest"]

# Configurações do coverage
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
